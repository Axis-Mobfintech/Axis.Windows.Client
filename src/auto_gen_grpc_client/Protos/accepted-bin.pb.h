// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Protos/accepted-bin.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Protos_2faccepted_2dbin_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Protos_2faccepted_2dbin_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3013000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3013000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Protos_2faccepted_2dbin_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Protos_2faccepted_2dbin_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Protos_2faccepted_2dbin_2eproto;
namespace axis {
namespace transactions {
class AcceptedBankIdentificationNumber;
class AcceptedBankIdentificationNumberDefaultTypeInternal;
extern AcceptedBankIdentificationNumberDefaultTypeInternal _AcceptedBankIdentificationNumber_default_instance_;
}  // namespace transactions
}  // namespace axis
PROTOBUF_NAMESPACE_OPEN
template<> ::axis::transactions::AcceptedBankIdentificationNumber* Arena::CreateMaybeMessage<::axis::transactions::AcceptedBankIdentificationNumber>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace axis {
namespace transactions {

// ===================================================================

class AcceptedBankIdentificationNumber PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:axis.transactions.AcceptedBankIdentificationNumber) */ {
 public:
  inline AcceptedBankIdentificationNumber() : AcceptedBankIdentificationNumber(nullptr) {}
  virtual ~AcceptedBankIdentificationNumber();

  AcceptedBankIdentificationNumber(const AcceptedBankIdentificationNumber& from);
  AcceptedBankIdentificationNumber(AcceptedBankIdentificationNumber&& from) noexcept
    : AcceptedBankIdentificationNumber() {
    *this = ::std::move(from);
  }

  inline AcceptedBankIdentificationNumber& operator=(const AcceptedBankIdentificationNumber& from) {
    CopyFrom(from);
    return *this;
  }
  inline AcceptedBankIdentificationNumber& operator=(AcceptedBankIdentificationNumber&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AcceptedBankIdentificationNumber& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AcceptedBankIdentificationNumber* internal_default_instance() {
    return reinterpret_cast<const AcceptedBankIdentificationNumber*>(
               &_AcceptedBankIdentificationNumber_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AcceptedBankIdentificationNumber& a, AcceptedBankIdentificationNumber& b) {
    a.Swap(&b);
  }
  inline void Swap(AcceptedBankIdentificationNumber* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AcceptedBankIdentificationNumber* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AcceptedBankIdentificationNumber* New() const final {
    return CreateMaybeMessage<AcceptedBankIdentificationNumber>(nullptr);
  }

  AcceptedBankIdentificationNumber* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AcceptedBankIdentificationNumber>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AcceptedBankIdentificationNumber& from);
  void MergeFrom(const AcceptedBankIdentificationNumber& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AcceptedBankIdentificationNumber* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "axis.transactions.AcceptedBankIdentificationNumber";
  }
  protected:
  explicit AcceptedBankIdentificationNumber(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Protos_2faccepted_2dbin_2eproto);
    return ::descriptor_table_Protos_2faccepted_2dbin_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageIdFieldNumber = 1,
    kIndexFieldNumber = 2,
    kInitialRangeFieldNumber = 4,
    kIssuerCodeFieldNumber = 3,
    kTotalSequentialTransactionsAllowedFieldNumber = 6,
    kFinalRangeFieldNumber = 5,
  };
  // int32 message_id = 1;
  void clear_message_id();
  ::PROTOBUF_NAMESPACE_ID::int32 message_id() const;
  void set_message_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_message_id() const;
  void _internal_set_message_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 index = 2;
  void clear_index();
  ::PROTOBUF_NAMESPACE_ID::int32 index() const;
  void set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_index() const;
  void _internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint64 initial_range = 4;
  void clear_initial_range();
  ::PROTOBUF_NAMESPACE_ID::uint64 initial_range() const;
  void set_initial_range(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_initial_range() const;
  void _internal_set_initial_range(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 issuer_code = 3;
  void clear_issuer_code();
  ::PROTOBUF_NAMESPACE_ID::int32 issuer_code() const;
  void set_issuer_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_issuer_code() const;
  void _internal_set_issuer_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint32 total_sequential_transactions_allowed = 6;
  void clear_total_sequential_transactions_allowed();
  ::PROTOBUF_NAMESPACE_ID::uint32 total_sequential_transactions_allowed() const;
  void set_total_sequential_transactions_allowed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_total_sequential_transactions_allowed() const;
  void _internal_set_total_sequential_transactions_allowed(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 final_range = 5;
  void clear_final_range();
  ::PROTOBUF_NAMESPACE_ID::uint64 final_range() const;
  void set_final_range(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_final_range() const;
  void _internal_set_final_range(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:axis.transactions.AcceptedBankIdentificationNumber)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 message_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 index_;
  ::PROTOBUF_NAMESPACE_ID::uint64 initial_range_;
  ::PROTOBUF_NAMESPACE_ID::int32 issuer_code_;
  ::PROTOBUF_NAMESPACE_ID::uint32 total_sequential_transactions_allowed_;
  ::PROTOBUF_NAMESPACE_ID::uint64 final_range_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Protos_2faccepted_2dbin_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AcceptedBankIdentificationNumber

// int32 message_id = 1;
inline void AcceptedBankIdentificationNumber::clear_message_id() {
  message_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AcceptedBankIdentificationNumber::_internal_message_id() const {
  return message_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AcceptedBankIdentificationNumber::message_id() const {
  // @@protoc_insertion_point(field_get:axis.transactions.AcceptedBankIdentificationNumber.message_id)
  return _internal_message_id();
}
inline void AcceptedBankIdentificationNumber::_internal_set_message_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  message_id_ = value;
}
inline void AcceptedBankIdentificationNumber::set_message_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_message_id(value);
  // @@protoc_insertion_point(field_set:axis.transactions.AcceptedBankIdentificationNumber.message_id)
}

// int32 index = 2;
inline void AcceptedBankIdentificationNumber::clear_index() {
  index_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AcceptedBankIdentificationNumber::_internal_index() const {
  return index_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AcceptedBankIdentificationNumber::index() const {
  // @@protoc_insertion_point(field_get:axis.transactions.AcceptedBankIdentificationNumber.index)
  return _internal_index();
}
inline void AcceptedBankIdentificationNumber::_internal_set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  index_ = value;
}
inline void AcceptedBankIdentificationNumber::set_index(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:axis.transactions.AcceptedBankIdentificationNumber.index)
}

// int32 issuer_code = 3;
inline void AcceptedBankIdentificationNumber::clear_issuer_code() {
  issuer_code_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AcceptedBankIdentificationNumber::_internal_issuer_code() const {
  return issuer_code_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AcceptedBankIdentificationNumber::issuer_code() const {
  // @@protoc_insertion_point(field_get:axis.transactions.AcceptedBankIdentificationNumber.issuer_code)
  return _internal_issuer_code();
}
inline void AcceptedBankIdentificationNumber::_internal_set_issuer_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  issuer_code_ = value;
}
inline void AcceptedBankIdentificationNumber::set_issuer_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_issuer_code(value);
  // @@protoc_insertion_point(field_set:axis.transactions.AcceptedBankIdentificationNumber.issuer_code)
}

// uint64 initial_range = 4;
inline void AcceptedBankIdentificationNumber::clear_initial_range() {
  initial_range_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AcceptedBankIdentificationNumber::_internal_initial_range() const {
  return initial_range_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AcceptedBankIdentificationNumber::initial_range() const {
  // @@protoc_insertion_point(field_get:axis.transactions.AcceptedBankIdentificationNumber.initial_range)
  return _internal_initial_range();
}
inline void AcceptedBankIdentificationNumber::_internal_set_initial_range(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  initial_range_ = value;
}
inline void AcceptedBankIdentificationNumber::set_initial_range(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_initial_range(value);
  // @@protoc_insertion_point(field_set:axis.transactions.AcceptedBankIdentificationNumber.initial_range)
}

// uint64 final_range = 5;
inline void AcceptedBankIdentificationNumber::clear_final_range() {
  final_range_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AcceptedBankIdentificationNumber::_internal_final_range() const {
  return final_range_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AcceptedBankIdentificationNumber::final_range() const {
  // @@protoc_insertion_point(field_get:axis.transactions.AcceptedBankIdentificationNumber.final_range)
  return _internal_final_range();
}
inline void AcceptedBankIdentificationNumber::_internal_set_final_range(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  final_range_ = value;
}
inline void AcceptedBankIdentificationNumber::set_final_range(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_final_range(value);
  // @@protoc_insertion_point(field_set:axis.transactions.AcceptedBankIdentificationNumber.final_range)
}

// uint32 total_sequential_transactions_allowed = 6;
inline void AcceptedBankIdentificationNumber::clear_total_sequential_transactions_allowed() {
  total_sequential_transactions_allowed_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AcceptedBankIdentificationNumber::_internal_total_sequential_transactions_allowed() const {
  return total_sequential_transactions_allowed_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 AcceptedBankIdentificationNumber::total_sequential_transactions_allowed() const {
  // @@protoc_insertion_point(field_get:axis.transactions.AcceptedBankIdentificationNumber.total_sequential_transactions_allowed)
  return _internal_total_sequential_transactions_allowed();
}
inline void AcceptedBankIdentificationNumber::_internal_set_total_sequential_transactions_allowed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  total_sequential_transactions_allowed_ = value;
}
inline void AcceptedBankIdentificationNumber::set_total_sequential_transactions_allowed(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_total_sequential_transactions_allowed(value);
  // @@protoc_insertion_point(field_set:axis.transactions.AcceptedBankIdentificationNumber.total_sequential_transactions_allowed)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace transactions
}  // namespace axis

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Protos_2faccepted_2dbin_2eproto
